name: Build OpenWrt N1

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      set_54x:
        description: "KERNEL: 5.4.x / none"
        required: false
        default: "none"
      set_510x:
        description: "KERNEL: 5.10.x / none"
        required: false
        default: "none"
      set_515x:
        description: "KERNEL: 5.15.x / none"
        required: false
        default: "none"
      set_516x:
        description: "KERNEL: 5.16.x / none"
        required: false
        default: "none"
      set_ver:
        description: "VER: 22.2.2 / ..."
        required: false
        default: "22.2.2"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  F_REPO_URL: https://github.com/unifreq/openwrt_packit
  F_REPO_BRANCH: master
  KERNEL_URL: https://github.com/kissyouhunter/kernel_N1/trunk/kernel
  FEEDS_CONF: lede.feeds.conf.default
  CONFIG_FILE: n1_lede.config
  DIY_P1_SH: diy-part1_n1_lede.sh
  DIY_P2_SH: diy-part2_n1_lede.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  SERVERCHAN_SCKEY: true
  USE_CACHEWRTBUILD: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库的lede_n1.config编译您自己的固件并打包,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi

    - name: choose kernel
      run: |
        set_54x="${{ github.event.inputs.set_54x }}"
        if [ "$set_54x" = "none" ]; then
          echo "no kernel was chosen"
        else
          echo "KERNEL_5_4_Y=${set_54x}" >> $GITHUB_ENV
        fi

        set_510x="${{ github.event.inputs.set_510x }}"
        if [ "$set_510x" = "none" ]; then
          echo "no kernel was chosen"
        else
          echo "KERNEL_5_10_Y=${set_510x}" >> $GITHUB_ENV
        fi

        set_515x="${{ github.event.inputs.set_515x }}"
        if [ "$set_515x" = "none" ]; then
          echo "no kernel was chosen"
        else
          echo "KERNEL_5_15_Y=${set_515x}" >> $GITHUB_ENV
        fi

        set_516x="${{ github.event.inputs.set_516x }}"
        if [ "$set_516x" = "none" ]; then
          echo "no kernel was chosen"
        else
          echo "KERNEL_5_16_Y=${set_516x}" >> $GITHUB_ENV
        fi

        set_ver="${{ github.event.inputs.set_ver }}"
        echo "OP_DATE=${set_ver}" >> $GITHUB_ENV

    - name: MachineType
      run: |
        cat /proc/cpuinfo
        cat /proc/meminfo
        cat /etc/issue
        cat /proc/version            
        
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: load cache
      if: env.USE_CACHEWRTBUILD == 'true'
      uses: klever1988/cachewrtbuild@test
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
 
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: chmod
      run: |
        cd openwrt
        mkdir -p files/usr/sbin
        cp $GITHUB_WORKSPACE/diy/n1_lede/usr/sbin/update files/usr/sbin/update -v
        chmod -R 755 .
 
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
 
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Download Openwrt_Packit
      id: packit
      run: |
        git clone $F_REPO_URL -b $F_REPO_BRANCH /tmp/packit
        sed -i 's|50000|25000|g' /tmp/packit/files/cpustat
        cd /tmp/packit
        cp $GITHUB_WORKSPACE/mk_s905d_n1-docker.sh mk_s905d_n1-docker.sh -v
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        mv openwrt-armvirt-64-default-rootfs.tar.gz /tmp/packit/
        cd /tmp/packit/files
        rm -f luci-admin-status-index-html.patch
        cp $GITHUB_WORKSPACE/luci-admin-status-index-html.patch luci-admin-status-index-html.patch -v       
        rm -f luci-admin-status-index-html-02.patch
        cp $GITHUB_WORKSPACE/luci-admin-status-index-html-02.patch luci-admin-status-index-html-02.patch -v
        rm -f amlogic_model_database.txt
        cp $GITHUB_WORKSPACE/amlogic_model_database.txt amlogic_model_database.txt -v
        rm -f openwrt-install-amlogic
        cp $GITHUB_WORKSPACE/openwrt-install-amlogic openwrt-install-amlogic -v

    - name: Pack OpenWrt
      id: pack
      run: |
        set_54x="${{ github.event.inputs.set_54x }}"
        if [ "$set_54x" = "none" ]; then
          echo "no kernel was chosen"
        else
          cd /tmp/packit
          rm -f make.env
          cp $GITHUB_WORKSPACE/make_kernel.env make.env -v
          sed -i 's|op-kissyouhunter|'"$KERNEL_5_4_Y"-kissyouhunter'|g' ./make.env
          sed -i 's|date|'"$OP_DATE"'|g' ./make.env
          svn co $KERNEL_URL/$KERNEL_5_4_Y
          mv $KERNEL_5_4_Y/* ./
          sudo bash mk_s905d_n1-docker.sh
        fi

        set_510x="${{ github.event.inputs.set_510x }}"
        if [ "$set_510x" = "none" ]; then
          echo "no kernel was chosen"
        else
          cd /tmp/packit
          rm -f make.env
          cp $GITHUB_WORKSPACE/make_kernel.env make.env -v
          sed -i 's|op-kissyouhunter|'"$KERNEL_5_10_Y"-kissyouhunter'|g' ./make.env
          sed -i 's|date|'"$OP_DATE"'|g' ./make.env
          svn co $KERNEL_URL/$KERNEL_5_10_Y
          mv $KERNEL_5_10_Y/* ./
          sudo bash mk_s905d_n1-docker.sh
        fi

        set_515x="${{ github.event.inputs.set_515x }}"
        if [ "$set_515x" = "none" ]; then
          echo "no kernel was chosen"
        else
          cd /tmp/packit
          rm -f make.env
          cp $GITHUB_WORKSPACE/make_kernel.env make.env -v
          sed -i 's|op-kissyouhunter|'"$KERNEL_5_15_Y"-kissyouhunter'|g' ./make.env
          sed -i 's|date|'"$OP_DATE"'|g' ./make.env
          svn co $KERNEL_URL/$KERNEL_5_15_Y
          mv $KERNEL_5_15_Y/* ./
          sudo bash mk_s905d_n1-docker.sh
        fi

        set_516x="${{ github.event.inputs.set_516x }}"
        if [ "$set_516x" = "none" ]; then
          echo "no kernel was chosen"
        else
          cd /tmp/packit
          rm -f make.env
          cp $GITHUB_WORKSPACE/make_kernel.env make.env -v
          sed -i 's|op-kissyouhunter|'"$KERNEL_5_16_Y"-kissyouhunter'|g' ./make.env
          sed -i 's|date|'"$OP_DATE"'|g' ./make.env
          svn co $KERNEL_URL/$KERNEL_5_16_Y
          mv $KERNEL_5_16_Y/* ./
          sudo bash mk_s905d_n1-docker.sh
        fi
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /tmp/packit/output
        sudo gzip -9 *
        sudo mv ../openwrt-armvirt-64-default-rootfs.tar.gz ./
        sudo chmod 777 *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        path: ${{ env.FIRMWARE }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库的lede_n1.config固件顺利编译完成了,并且打包完毕！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
