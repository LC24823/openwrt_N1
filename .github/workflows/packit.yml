name: packit

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: lede.feeds.conf.default
  CONFIG_FILE: n1_lede.config
  DIY_P1_SH: diy-part1_n1_lede.sh
  DIY_P2_SH: diy-part2_n1_lede.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  SERVERCHAN_SCKEY: true
  USE_CACHEWRTBUILD: true
  KERNEL5.4.Y: 5.4.164
  KERNEL5.10.Y: 5.10.84
  KERNEL5.15.Y: 5.15.7
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: telegrame_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
          您正在使用kissyouhunter仓库的lede_n1.config编译您自己的固件,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
        
    - name: MachineType
      run: |
        cat /proc/cpuinfo
        cat /proc/meminfo
        cat /etc/issue
        cat /proc/version            
        
    - name: Checkout
      uses: actions/checkout@main

    - name: Installing requirements 
      run: |
        sudo apt-get update
        sudo apt-get install -y subverion

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Download Openwrt_Packit
      id: packit
      run: |
        git clone https://github.com/unifreq/openwrt_packit.git /tmp/packit
        sed -i 's|50000|25000|g' /tmp/packit/files/cpustat
        cd /tmp/packit
        wget https://github.com/kissyouhunter/openwrt_N1/releases/download/rootfs/openwrt-armvirt-64-default-rootfs.tar.gz
        cp $GITHUB_WORKSPACE/mk_s905d_n1-docker.sh mk_s905d_n1-docker.sh -v
        cd /tmp/packit/files
        rm -f luci-admin-status-index-html-02.patch
        cp $GITHUB_WORKSPACE/luci-admin-status-index-html-02.patch luci-admin-status-index-html-02.patch -v

    - name: Pack OpenWrt
      id: pack
      run: |
        cd /tmp/packit
        rm -f make.env
        cp $GITHUB_WORKSPACE/make_kernel_5.4.y.env make.env -v
        svn co https://github.com/kissyouhunter/kernel_N1/trunk/kernel/KERNEL5.4.Y
        mv KERNEL5.4.Y/* ./
        sudo bash mk_s905d_n1-docker.sh
        rm -f make.env
        cp $GITHUB_WORKSPACE/make_kernel_5.10.y.env make.env -v
        svn co https://github.com/kissyouhunter/kernel_N1/trunk/kernel/KERNEL5.10.Y
        mv KERNEL5.110.Y/* ./
        sudo bash mk_s905d_n1-docker.sh
        rm -f make.env
        svn co https://github.com/kissyouhunter/kernel_N1/trunk/kernel/KERNEL5.15.Y
        mv KERNEL5.15.Y/* ./
        cp $GITHUB_WORKSPACE/kernel/$KERNEL5.15.Y/* ./
        sudo bash mk_s905d_n1-docker.sh

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /tmp/packit/output
        sudo gzip -9 *
        sudo chmod 777 *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        #name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: telegram_bot
      run: |
        if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
          您使用kissyouhunter仓库的lede_n1.config固件顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
        fi
